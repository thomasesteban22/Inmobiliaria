define("dummy/app",["ember","ember/resolver","ember/load-initializers","dummy/config/environment","exports"],function(e,t,n,l,a){"use strict";var o=e["default"],s=t["default"],i=n["default"],r=l["default"];o.MODEL_FACTORY_INJECTIONS=!0;var u=o.Application.extend({modulePrefix:r.modulePrefix,podModulePrefix:r.podModulePrefix,Resolver:s});i(u,r.modulePrefix),a["default"]=u}),define("dummy/components/google-map",["ember","ember-google-map/core/helpers","ember-google-map/mixins/google-object","exports"],function(e,t,n,l){"use strict";function a(e,t){return null==t&&(t=y(e,"radius")),e instanceof google.maps.LatLng||(e=u._latLngToGoogle(e)),i?(i.setCenter(e),i.setRadius(t)):i=new google.maps.Circle({center:e,radius:t}),i}function o(e,t,n){return-1!==["markers","infoWindows"].indexOf(e)?t.reduce(function(e,t){var n=b(t,"lat","lng");return null!=n.lat&&null!=n.lng&&e.push(n),e},n||[]):"circles"===e?t.reduce(function(e,t){var n,l=b(t,"lat","lng","radius");return null!=l.lat&&null!=l.lng&&null!=l.radius&&(n=a(l).getBounds(),e.push(u._latLngFromGoogle(n.getNorthEast())),e.push(u._latLngFromGoogle(n.getSouthWest()))),e},n||[]):t.reduce(function(e,t){return y(t,"_path").reduce(function(e,t){var n=b(t,"lat","lng");return null!=n.lat&&null!=n.lng&&e.push(n),e},n||[])},n||[])}function s(e){return r.Object.create(e)}var i,r=e["default"],u=t["default"],c=n["default"],p=r.computed,h=p.oneWay,d=r.on,f=r.observer,g=r.String.fmt,m=r.EnumerableUtils.forEach,b=r.getProperties,y=r.get,x=["markers","infoWindows","circles","polylines","polygons"],v=r.A([s({id:"road",label:"road"}),s({id:"satellite",label:"satellite"}),s({id:"terrain",label:"terrain"}),s({id:"hybrid",label:"hybrid"})]);l.MAP_TYPES=v;var I=r.A([s({id:u.PLACE_TYPE_ADDRESS,label:"address"}),s({id:u.PLACE_TYPE_LOCALITY,label:"locality"}),s({id:u.PLACE_TYPE_ADMIN_REGION,label:"administrative region"}),s({id:u.PLACE_TYPE_BUSINESS,label:"business"})]);l.PLACE_TYPES=I,l["default"]=r.Component.extend(c,{googleFQCN:"google.maps.Map",classNames:["google-map"],googleProperties:{zoom:{event:"zoom_changed",cast:u.cast.integer},type:{name:"mapTypeId",event:"maptypeid_changed",toGoogle:u._typeToGoogle,fromGoogle:u._typeFromGoogle},"lat,lng":{name:"center",event:"center_changed",toGoogle:u._latLngToGoogle,fromGoogle:u._latLngFromGoogle}},googleEvents:{},googleObject:null,alwaysAutoFitBounds:!1,autoFitBounds:!1,fitBoundsArray:p("autoFitBounds","_markers.[]","_infoWindow.[]","_polylines.@each._path.[]","_polygons.@each._path.[]","_circles.[]",function(e,t){var n,l=arguments,a=l;return a.length>1?this._fixedFitBoundsArray=t:this._fixedFitBoundsArray?t=this._fixedFitBoundsArray:(n=this.get("autoFitBounds"),n?(n=n===!0?x:n.split(","),t=[],m(n,function(e){o(e,this.get("_"+e),t)},this)):t=null),t}),lat:0,lng:0,zoom:5,type:"road",markers:null,_markers:p(function(){return this.container.lookupFactory("controller:google-map/markers").create({parentController:this})}).readOnly(),markerController:"google-map/marker",markerViewClass:"google-map/marker",markerInfoWindowTemplateName:"google-map/info-window",markerHasInfoWindow:!0,polylines:null,_polylines:p(function(){return this.container.lookupFactory("controller:google-map/polylines").create({parentController:this})}).readOnly(),polylineController:"google-map/polyline",polylinePathController:"google-map/polyline-path",polylineViewClass:"google-map/polyline",polygons:null,_polygons:p(function(){return this.container.lookupFactory("controller:google-map/polygons").create({parentController:this})}).readOnly(),polygonController:"google-map/polygon",polygonPathController:"google-map/polygon-path",polygonViewClass:"google-map/polygon",circles:null,_circles:p(function(){return this.container.lookupFactory("controller:google-map/circles").create({parentController:this})}).readOnly(),circleController:"google-map/circle",circleViewClass:"google-map/circle",infoWindows:null,_infoWindows:p(function(){return this.container.lookupFactory("controller:google-map/info-windows").create({parentController:this})}).readOnly(),infoWindowController:"google-map/info-window",infoWindowViewClass:"google-map/info-window",infoWindowTemplateName:"google-map/info-window",map:h("googleObject"),_scheduleAutoFitBounds:function(){r.run.schedule("afterRender",this,function(){r.run.debounce(this,"_fitBounds",200)})},_observesAutoFitBoundLength:d("init",f("fitBoundsArray.length",function(){this.get("alwaysAutoFitBounds")&&this._scheduleAutoFitBounds()})),_fitBounds:function(){var e,t,n;if(!this.isDestroying&&!this.isDestroyed){if(e=this.get("googleObject"),"inDOM"!==this._state||!e)return void this._scheduleAutoFitBounds(n);if(n=this.get("fitBoundsArray")){if(r.isArray(n)){if(n=n.slice(),!n.get("length"))return;t=new google.maps.LatLngBounds(u._latLngToGoogle(n.shift())),m(n,function(e){t.extend(u._latLngToGoogle(e))})}else t=u._boundsToGoogle(n);t&&e.fitBounds(t)}}},initGoogleMap:d("didInsertElement",function(){var e;this.destroyGoogleMap(),u.hasGoogleLib()&&(e=this.$("div.map-canvas")[0],this.createGoogleObject(e,null),this._scheduleAutoFitBounds())}),destroyGoogleMap:d("willDestroyElement",function(){this.get("googleObject")&&(r.debug(g("[google-map] destroying %@",this.get("googleName"))),this.set("googleObject",null))})})}),define("dummy/controllers/application",["ember","dummy/components/google-map","exports"],function(e,t,n){"use strict";var l=e["default"],a=t.MAP_TYPES;n["default"]=l.Controller.extend({lat:10,lng:10,zoom:10,type:"road",mapTypes:a,markers:[{title:"one",lat:5,lng:5,description:"hello 1",isDraggable:!0},{title:"two",lat:5,lng:0,hasInfoWindow:!1},{title:"three",lat:0,lng:5,infoWindowTemplateName:"marker-info-window",helloWorld:"Hello World!"}],infoWindows:[{title:"some info window",lat:-5,lng:-5,description:"hello everybody!"}],polylines:[{isEditable:!0,path:[{lat:2.8,lng:-3.6},{lat:1.5,lng:.2},{lat:-3,lng:2},{lat:-5.5,lng:-.8},{lat:-5.9,lng:-8.9},{lat:-3.4,lng:-11.6},{lat:1.2,lng:-11.1},{lat:2.8,lng:-7}],strokeOpacity:.8,strokeColor:"blue"}],polygons:[{isEditable:!0,path:[{lat:7.2,lng:-5},{lat:7.7,lng:-2},{lat:4,lng:-1.5},{lat:5,lng:-3.1},{lat:4.8,lng:-6.7},{lat:5.3,lng:-9.7},{lat:7.9,lng:-10.3},{lat:8,lng:-7.3}],strokeOpacity:.8,strokeColor:"red",fillColor:"yellow",fillOpacity:.5}],circles:[{isEditable:!0,lat:-4.4,lng:6.8,radius:314907}],actions:{didClickMap:function(e,t){var n=t.latLng;this.get("markers").pushObject({lat:n.lat(),lng:n.lng()})},addMarker:function(){this.get("markers").addObject({title:"new",lat:0,lng:0,isDraggable:!0})},removeMarker:function(e){this.get("markers").removeObject(e)},addCircle:function(){this.get("circles").addObject({lat:0,lng:0,radius:3e5,isEditable:!0})},removeCircle:function(e){this.get("circles").removeObject(e)},addInfoWindow:function(){this.get("infoWindows").addObject({title:"new iw",description:"hello",lat:-5,lng:0})},removeInfoWindow:function(e){this.get("infoWindows").removeObject(e)},addPolyline:function(){this.get("polylines").addObject({isEditable:!1,path:[{lat:0,lng:0},{lat:1,lng:0}]})},removePolyline:function(e){this.get("polylines").removeObject(e)},addPolylinePathItem:function(e){e.addObject({lat:1,lng:1})},removePolylinePathItem:function(e,t){e.removeObject(t)},addPolygon:function(){this.get("polygons").addObject({isEditable:!1,path:[{lat:0,lng:0},{lat:1,lng:0}]})},removePolygon:function(e){this.get("polygons").removeObject(e)},addPolygonPathItem:function(e){e.addObject({lat:1,lng:1})},removePolygonPathItem:function(e,t){e.removeObject(t)}}})}),define("dummy/controllers/google-map/circle",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({})}),define("dummy/controllers/google-map/circles",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ArrayController.extend({itemController:n.computed.alias("parentController.circleController"),model:n.computed.alias("parentController.circles")})}),define("dummy/controllers/google-map/info-window",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({})}),define("dummy/controllers/google-map/info-windows",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ArrayController.extend({itemController:n.computed.alias("parentController.infoWindowController"),model:n.computed.alias("parentController.infoWindows")})}),define("dummy/controllers/google-map/marker",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({})}),define("dummy/controllers/google-map/markers",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ArrayController.extend({itemController:n.computed.alias("parentController.markerController"),model:n.computed.alias("parentController.markers")})}),define("dummy/controllers/google-map/polygon-path",["dummy/controllers/google-map/polyline-path","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.extend({})}),define("dummy/controllers/google-map/polygon",["dummy/controllers/google-map/polyline","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.extend({})}),define("dummy/controllers/google-map/polygons",["ember","dummy/controllers/google-map/polylines","exports"],function(e,t,n){"use strict";var l=e["default"],a=t["default"];n["default"]=a.extend({itemController:l.computed.alias("parentController.polygonController"),model:l.computed.alias("parentController.polygons"),pathController:l.computed.alias("parentController.polygonPathController")})}),define("dummy/controllers/google-map/polyline-path",["ember","ember-google-map/mixins/google-array","ember-google-map/core/helpers","exports"],function(e,t,n,l){"use strict";var a=e["default"],o=t["default"],s=n["default"];l["default"]=a.ArrayController.extend(o,{model:a.computed.alias("parentController.path"),googleItemFactory:s._latLngToGoogle,emberItemFactory:function(e){return a.Object.create(s._latLngFromGoogle(e))},observeEmberProperties:["lat","lng"]})}),define("dummy/controllers/google-map/polyline",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({pathController:n.computed.alias("parentController.pathController"),_path:n.computed("path","pathController",function(){return this.container.lookupFactory("controller:"+this.get("pathController")).create({parentController:this})}).readOnly()})}),define("dummy/controllers/google-map/polylines",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ArrayController.extend({itemController:n.computed.alias("parentController.polylineController"),model:n.computed.alias("parentController.polylines"),pathController:n.computed.alias("parentController.polylinePathController")})}),define("dummy/initializers/ember-google-map",["ember-google-map/utils/load-google-map","exports"],function(e,t){"use strict";function n(e,t){t.register("util:load-google-map",l,{instantiate:!1}),t.inject("route","loadGoogleMap","util:load-google-map")}var l=e["default"];t.initialize=n,t["default"]={name:"ember-google-map",initialize:n}}),define("dummy/initializers/export-application-global",["ember","dummy/config/environment","exports"],function(e,t,n){"use strict";function l(e,t){var n=a.String.classify(o.modulePrefix);o.exportApplicationGlobal&&(window[n]=t)}var a=e["default"],o=t["default"];n.initialize=l,n["default"]={name:"export-application-global",initialize:l}}),define("dummy/router",["ember","dummy/config/environment","exports"],function(e,t,n){"use strict";var l=e["default"],a=t["default"],o=l.Router.extend({location:a.locationType});o.map(function(){}),n["default"]=o}),define("dummy/routes/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Route.extend({model:function(){return this.loadGoogleMap()}})}),define("dummy/templates/application",["exports"],function(e){"use strict";e["default"]=Ember.Handlebars.template({1:function(e,t,n,l){var a=t.helperMissing,o=this.escapeExpression,s="";return l.buffer.push("      <li>\n        <label>title: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{value:"marker.title"},hashTypes:{value:"ID"},hashContexts:{value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n        <label>desc.: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{value:"marker.description"},hashTypes:{value:"ID"},hashContexts:{value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n        <label>lat/lng: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"marker.lat"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("/"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"marker.lng"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n        <label>"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{checked:"marker.isVisible",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("visible</label> |\n        <label>"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{checked:"marker.isDraggable",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("draggable</label>\n        <button "),l.buffer.push(o(t.action.call(e,"removeMarker","marker",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID"],contexts:[e,e],data:l}))),l.buffer.push(">x</button>\n      </li>\n"),s},3:function(e,t,n,l){var a=t.helperMissing,o=this.escapeExpression,s="";return l.buffer.push("      <li>\n        <label>title: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{value:"iw.title"},hashTypes:{value:"ID"},hashContexts:{value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n        <label>desc.: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{value:"iw.description"},hashTypes:{value:"ID"},hashContexts:{value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n        <label>lat/lng: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"iw.lat"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("/"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"iw.lng"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n        <label>"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{checked:"iw.isVisible",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("visible</label>\n        <button "),l.buffer.push(o(t.action.call(e,"removeInfoWindow","iw",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID"],contexts:[e,e],data:l}))),l.buffer.push(">x</button>\n      </li>\n"),s},5:function(e,t,n,l){var a,o=t.helperMissing,s=this.escapeExpression,i="";return l.buffer.push("      <li>\n        <label>"),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{checked:"polyline.isVisible",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("visible</label> |\n        <label>"),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{checked:"polyline.isDraggable",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("draggable</label>\n        <label>"),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{checked:"polyline.isEditable",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("editable</label>\n        <button "),l.buffer.push(s(t.action.call(e,"removePolyline","polyline",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID"],contexts:[e,e],data:l}))),l.buffer.push('>x</button>\n        <ul class="polyline-path">\n'),a=t.each.call(e,"entry","in","polyline.path",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(6,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("        </ul>\n        <button "),l.buffer.push(s(t.action.call(e,"addPolylinePathItem","polyline.path",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID"],contexts:[e,e],data:l}))),l.buffer.push(">add point</button>\n      </li>\n"),i},6:function(e,t,n,l){var a=t.helperMissing,o=this.escapeExpression,s="";return l.buffer.push("            <li>\n              <label>lat/lng: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"entry.lat"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("\n                /"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"entry.lng"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n              <button "),l.buffer.push(o(t.action.call(e,"removePolylinePathItem","polyline.path","entry",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID","ID"],contexts:[e,e,e],data:l}))),l.buffer.push(">x</button>\n            </li>\n"),s},8:function(e,t,n,l){var a,o=t.helperMissing,s=this.escapeExpression,i="";return l.buffer.push("      <li>\n        <label>"),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{checked:"polygon.isVisible",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("visible</label> |\n        <label>"),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{checked:"polygon.isDraggable",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("draggable</label>\n        <label>"),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{checked:"polygon.isEditable",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("editable</label>\n        <button "),l.buffer.push(s(t.action.call(e,"removePolygon","polygon",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID"],contexts:[e,e],data:l}))),l.buffer.push('>x</button>\n        <ul class="polygon-path">\n'),a=t.each.call(e,"entry","in","polygon.path",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(9,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("        </ul>\n        <button "),l.buffer.push(s(t.action.call(e,"addPolygonPathItem","polygon.path",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID"],contexts:[e,e],data:l}))),l.buffer.push(">add point</button>\n      </li>\n"),i},9:function(e,t,n,l){var a=t.helperMissing,o=this.escapeExpression,s="";return l.buffer.push("            <li>\n              <label>lat/lng: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"entry.lat"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("\n                /"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"entry.lng"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n              <button "),l.buffer.push(o(t.action.call(e,"removePolygonPathItem","polygon.path","entry",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID","ID"],contexts:[e,e,e],data:l}))),l.buffer.push(">x</button>\n            </li>\n"),s},11:function(e,t,n,l){var a=t.helperMissing,o=this.escapeExpression,s="";return l.buffer.push("      <li>\n        <label>center lat/lng: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"circle.lat"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("\n          /"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"circle.lng"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n        <label>radius: "),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{"class":"coord",value:"radius"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n        <label>"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{checked:"circle.isVisible",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("visible</label> |\n        <label>"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{checked:"circle.isDraggable",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("draggable</label> |\n        <label>"),l.buffer.push(o((t.input||e&&e.input||a).call(e,{name:"input",hash:{checked:"circle.isEditable",type:"checkbox"},hashTypes:{checked:"ID",type:"STRING"},hashContexts:{checked:e,type:e},types:[],contexts:[],data:l}))),l.buffer.push("editable</label>\n        <button "),l.buffer.push(o(t.action.call(e,"removeCircle","circle",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING","ID"],contexts:[e,e],data:l}))),l.buffer.push(">x</button>\n      </li>\n"),s},compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,l){var a,o=t.helperMissing,s=this.escapeExpression,i="";return l.buffer.push('<h2 id="title">\n  Simple example of using\n  <a href="https://github.com/huafu/ember-google-map">ember-google-map</a>\n</h2>\n\n'),l.buffer.push(s((t["google-map"]||e&&e["google-map"]||o).call(e,{name:"google-map",hash:{ev_click:"didClickMap",autoFitBounds:!0,gopt_backgroundColor:"transparent",gopt_mapTypeControl:!1,circles:"circles",polygons:"polygons",polylines:"polylines",markerInfoWindowTemplateName:"marker-info-window",infoWindows:"infoWindows",markers:"markers",zoom:"zoom",type:"type",lng:"lng",lat:"lat"},hashTypes:{ev_click:"STRING",autoFitBounds:"BOOLEAN",gopt_backgroundColor:"STRING",gopt_mapTypeControl:"BOOLEAN",circles:"ID",polygons:"ID",polylines:"ID",markerInfoWindowTemplateName:"STRING",infoWindows:"ID",markers:"ID",zoom:"ID",type:"ID",lng:"ID",lat:"ID"},hashContexts:{ev_click:e,autoFitBounds:e,gopt_backgroundColor:e,gopt_mapTypeControl:e,circles:e,polygons:e,polylines:e,markerInfoWindowTemplateName:e,infoWindows:e,markers:e,zoom:e,type:e,lng:e,lat:e},types:[],contexts:[],data:l}))),l.buffer.push("\n\n<h3>Map settings</h3>\n<div>\n  <label>center lat/lng: "),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{"class":"coord",value:"lat"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("/"),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{"class":"coord",value:"lng"},hashTypes:{"class":"STRING",value:"ID"},hashContexts:{"class":e,value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n  <label>zoom: "),l.buffer.push(s((t.input||e&&e.input||o).call(e,{name:"input",hash:{value:"zoom"},hashTypes:{value:"ID"},hashContexts:{value:e},types:[],contexts:[],data:l}))),l.buffer.push("</label>\n  <label>type: "),l.buffer.push(s(t.view.call(e,"select",{name:"view",hash:{value:"type",optionValuePath:"content.id",optionLabelPath:"content.label",content:"mapTypes"},hashTypes:{value:"ID",optionValuePath:"STRING",optionLabelPath:"STRING",content:"ID"},hashContexts:{value:e,optionValuePath:e,optionLabelPath:e,content:e},types:["STRING"],contexts:[e],data:l}))),l.buffer.push('</label>\n</div>\n\n<h3>Markers</h3>\n<div>\n  <ul class="markers">\n'),a=t.each.call(e,"marker","in","markers",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(1,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("  </ul>\n  <button "),l.buffer.push(s(t.action.call(e,"addMarker",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[e],data:l}))),l.buffer.push('>add</button>\n</div>\n\n<h3>Info windows</h3>\n<div>\n  <ul class="info-windows">\n'),a=t.each.call(e,"iw","in","infoWindows",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(3,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("  </ul>\n  <button "),l.buffer.push(s(t.action.call(e,"addInfoWindow",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[e],data:l}))),l.buffer.push('>add</button>\n</div>\n\n<h3>Polylines</h3>\n<div>\n  <ul class="polylines">\n'),a=t.each.call(e,"polyline","in","polylines",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(5,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("  </ul>\n  <button "),l.buffer.push(s(t.action.call(e,"addPolyline",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[e],data:l}))),l.buffer.push('>add</button>\n</div>\n\n<h3>Polygons</h3>\n<div>\n  <ul class="polygons">\n'),a=t.each.call(e,"polygon","in","polygons",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(8,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("  </ul>\n  <button "),l.buffer.push(s(t.action.call(e,"addPolygon",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[e],data:l}))),l.buffer.push('>add</button>\n</div>\n\n<h3>Circles</h3>\n<div>\n  <ul class="circles">\n'),a=t.each.call(e,"circle","in","circles",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(11,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("  </ul>\n  <button "),l.buffer.push(s(t.action.call(e,"addCircle",{name:"action",hash:{},hashTypes:{},hashContexts:{},types:["STRING"],contexts:[e],data:l}))),l.buffer.push(">add</button>\n</div>\n"),i},useData:!0})}),define("dummy/templates/components/google-map",["exports"],function(e){"use strict";e["default"]=Ember.Handlebars.template({1:function(e,t,n,l){var a,o="";return l.buffer.push("      <li>"),a=t._triageMustache.call(e,"marker.title",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push(" @ "),a=t._triageMustache.call(e,"marker.lat",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push(","),a=t._triageMustache.call(e,"marker.lng",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("</li>\n"),a=t["if"].call(e,"view.hasInfoWindow",{name:"if",hash:{},hashTypes:{},hashContexts:{},fn:this.program(2,l),inverse:this.noop,types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),o},2:function(e,t,n,l){var a=this.escapeExpression,o="";return l.buffer.push("        "),l.buffer.push(a(t.view.call(e,"google-map/info-window",{name:"view",hash:{context:"marker"},hashTypes:{context:"ID"},hashContexts:{context:e},types:["STRING"],contexts:[e],data:l}))),l.buffer.push("\n"),o},4:function(e,t,n,l){var a=this.escapeExpression,o="";return l.buffer.push("      "),l.buffer.push(a(t.view.call(e,"infoWindowViewClass",{name:"view",hash:{context:"iw"},hashTypes:{context:"ID"},hashContexts:{context:e},types:["ID"],contexts:[e],data:l}))),l.buffer.push("\n"),o},compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,l){var a,o=this.escapeExpression,s="";return l.buffer.push('<div class="map-canvas"></div>\n<div style="display: none;">\n  <ul>\n'),a=t.each.call(e,"marker","in","_markers",{name:"each",hash:{itemViewClass:"markerViewClass"},hashTypes:{itemViewClass:"ID"},hashContexts:{itemViewClass:e},fn:this.program(1,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("  </ul>\n  <ul>\n"),a=t.each.call(e,"iw","in","_infoWindows",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(4,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("  </ul>\n  <ul>\n    "),l.buffer.push(o(t.each.call(e,"polyline","in","_polylines",{name:"each",hash:{itemViewClass:"polylineViewClass"},hashTypes:{itemViewClass:"ID"},hashContexts:{itemViewClass:e},types:["ID","ID","ID"],contexts:[e,e,e],data:l}))),l.buffer.push("\n  </ul>\n  <ul>\n    "),l.buffer.push(o(t.each.call(e,"polygon","in","_polygons",{name:"each",hash:{itemViewClass:"polygonViewClass"},hashTypes:{itemViewClass:"ID"},hashContexts:{itemViewClass:e},types:["ID","ID","ID"],contexts:[e,e,e],data:l}))),l.buffer.push("\n  </ul>\n  <ul>\n    "),l.buffer.push(o(t.each.call(e,"circle","in","_circles",{name:"each",hash:{itemViewClass:"circleViewClass"},hashTypes:{itemViewClass:"ID"},hashContexts:{itemViewClass:e},types:["ID","ID","ID"],contexts:[e,e,e],data:l}))),l.buffer.push("\n  </ul>\n</div>\n"),s},useData:!0})}),define("dummy/templates/google-map/info-window",["exports"],function(e){"use strict";e["default"]=Ember.Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,l){var a,o="";return l.buffer.push('<h3 style="margin-top: 0;">'),a=t._triageMustache.call(e,"title",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push('</h3>\n\n<p style="margin-bottom: 0;">'),a=t._triageMustache.call(e,"description",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("</p>\n"),o},useData:!0})}),define("dummy/templates/google-map/polyline",["exports"],function(e){"use strict";e["default"]=Ember.Handlebars.template({1:function(e,t,n,l){var a,o="";return l.buffer.push("    <li>"),a=t._triageMustache.call(e,"point.lat",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push(","),a=t._triageMustache.call(e,"point.lng",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("</li>\n"),o},compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,l){var a,o="";return l.buffer.push("<ul>\n"),a=t.each.call(e,"point","in","_path",{name:"each",hash:{},hashTypes:{},hashContexts:{},fn:this.program(1,l),inverse:this.noop,types:["ID","ID","ID"],contexts:[e,e,e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("</ul>\n"),o},useData:!0})}),define("dummy/templates/marker-info-window",["exports"],function(e){"use strict";e["default"]=Ember.Handlebars.template({compiler:[6,">= 2.0.0-beta.1"],main:function(e,t,n,l){var a,o="";return l.buffer.push('<div class="marker-info-window">\n  <h2>I am marker '),a=t._triageMustache.call(e,"title",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("</h2>\n\n  <div>\n    <div>my latitude: <code>"),a=t._triageMustache.call(e,"lat",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("</code></div>\n    <div>my longitude: <code>"),a=t._triageMustache.call(e,"lng",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("</code></div>\n  </div>\n  <h4>"),a=t._triageMustache.call(e,"helloWorld",{name:"_triageMustache",hash:{},hashTypes:{},hashContexts:{},types:["ID"],contexts:[e],data:l}),null!=a&&l.buffer.push(a),l.buffer.push("</h4>\n</div>\n"),o
},useData:!0})}),define("dummy/views/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.View.extend({didInsertElement:function(){this.$("> h3").each(function(){var e=n.$(this);e.addClass("collapsed"),e.next().addClass("collapsed")})},click:function(e){if("H3"===e.target.tagName){var t=this.$(e.target);t.toggleClass("expanded").toggleClass("collapsed"),t.next().toggleClass("expanded").toggleClass("collapsed")}}})}),define("dummy/views/google-map/circle",["ember","ember-google-map/core/helpers","dummy/views/google-map/core","exports"],function(e,t,n,l){"use strict";var a=e["default"],o=t["default"],s=n["default"],i=a.computed,r=i.alias;l["default"]=s.extend({googleFQCN:"google.maps.Circle",googleProperties:{isClickable:{name:"clickable",optionOnly:!0},isVisible:{name:"visible",event:"visible_changed"},isDraggable:{name:"draggable",event:"draggable_changed"},isEditable:{name:"editable",event:"editable_changed"},radius:{event:"radius_changed",cast:o.cast.number},strokeColor:{optionOnly:!0},strokeOpacity:{optionOnly:!0,cast:o.cast.number},strokeWeight:{optionOnly:!0,cast:o.cast.number},fillColor:{optionOnly:!0},fillOpacity:{optionOnly:!0,cast:o.cast.number},zIndex:{cast:o.cast.integer,optionOnly:!0},map:{readOnly:!0},"lat,lng":{name:"center",event:"center_changed",toGoogle:o._latLngToGoogle,fromGoogle:o._latLngFromGoogle}},radius:r("controller.radius"),zIndex:r("controller.zIndex"),isVisible:r("controller.isVisible"),isDraggable:r("controller.isDraggable"),isClickable:r("controller.isClickable"),isEditable:r("controller.isEditable"),strokeColor:r("controller.strokeColor"),strokeOpacity:r("controller.strokeOpacity"),strokeWeight:r("controller.strokeWeight"),fillColor:r("controller.fillColor"),fillOpacity:r("controller.fillOpacity"),lat:r("controller.lat"),lng:r("controller.lng")})}),define("dummy/views/google-map/core",["ember","ember-google-map/core/helpers","ember-google-map/mixins/google-object","exports"],function(e,t,n,l){"use strict";var a=e["default"],o=t["default"],s=n["default"],i=a.computed,r=i.oneWay,u=a.on;l["default"]=a.View.extend(s,{googleMapComponent:r("parentView"),googleEventsTarget:r("googleMapComponent.targetObject"),map:r("googleMapComponent.map"),initGoogleObject:u("didInsertElement",function(){o.hasGoogleLib()&&!this.get("googleObject")&&this.createGoogleObject()}),destroyGoogleObject:u("willDestroyElement",function(){var e=this.get("googleObject");e&&(e.setMap(null),this.set("googleObject",null))})})}),define("dummy/views/google-map/info-window",["ember","ember-google-map/core/helpers","dummy/views/google-map/core","dummy/views/google-map/marker","exports"],function(e,t,n,l,a){"use strict";var o=e["default"],s=t["default"],i=n["default"],r=l["default"],u=o.observer,c=o.on,p=o.run.scheduleOnce,h=o.computed,d=h.alias,f=h.oneWay,g=h.any;a["default"]=i.extend({classNames:["google-info-window"],googleFQCN:"google.maps.InfoWindow",templateName:g("controller.templateName","parentView.infoWindowTemplateName"),googleProperties:{zIndex:{event:"zindex_changed",cast:s.cast.integer},map:{readOnly:!0},"lat,lng":{name:"position",event:"position_changed",toGoogle:s._latLngToGoogle,fromGoogle:s._latLngFromGoogle}},isMarkerInfoWindow:h("parentView",function(){return this.get("parentView")instanceof r}),googleMapComponent:h("isMarkerInfoWindow",function(){return this.get(this.get("isMarkerInfoWindow")?"parentView.parentView":"parentView")}),_coreGoogleEvents:["closeclick"],zIndex:d("controller.zIndex"),lat:d("controller.lat"),lng:d("controller.lng"),anchor:f("parentView.infoWindowAnchor"),visible:h("parentView.isInfoWindowVisible","controller.isVisible",function(e,t){var n=arguments,l=n,a=this.get("isMarkerInfoWindow");return l.length<2?a?t=this.get("parentView.isInfoWindowVisible"):(t=this.getWithDefault("controller.isVisible",!0),this.set("controller.isVisible",t)):a?this.set("parentView.isInfoWindowVisible",t):this.set("controller.isVisible",t),t}),initGoogleObject:c("didInsertElement",function(){p("afterRender",this,"_initGoogleInfoWindow")}),handleInfoWindowVisibility:u("visible",function(){if(!this._changingVisible){var e=this.get("googleObject");e&&(this.get("visible")?e.open(this.get("map"),this.get("anchor")||void 0):e.close())}}),_initGoogleInfoWindow:function(){s.hasGoogleLib()&&!this.get("googleObject")&&(this.createGoogleObject({content:this._backupViewElement()}),this.handleInfoWindowVisibility())},destroyGoogleObject:c("willDestroyElement",function(){var e=this.get("googleObject");e&&(this._changingVisible=!0,e.close(),e.setMap(null),this._restoreViewElement(),this.set("googleObject",null),this._changingVisible=!1)}),_backupViewElement:function(){var e=this.get("element");return this._placeholderElement||(this._placeholderElement=document.createElement(e.nodeName),e.parentNode.replaceChild(this._placeholderElement,e)),e},_restoreViewElement:function(){var e=this.get("element");return this._placeholderElement&&(this._placeholderElement.parentNode.replaceChild(e,this._placeholderElement),this._placeholderElement=null),e},_handleCoreEvent:function(e){"closeclick"===e&&(this._changingVisible=!0,this.set("visible",!1),this._changingVisible=!1)}})}),define("dummy/views/google-map/marker",["ember","ember-google-map/core/helpers","dummy/views/google-map/core","exports"],function(e,t,n,l){"use strict";var a=e["default"],o=t["default"],s=n["default"],i=a.computed,r=i.alias,u=i.oneWay;l["default"]=s.extend({googleFQCN:"google.maps.Marker",googleProperties:{isClickable:{name:"clickable",event:"clickable_changed"},isVisible:{name:"visible",event:"visible_changed"},isDraggable:{name:"draggable",event:"draggable_changed"},title:{event:"title_changed"},opacity:{cast:o.cast.number},icon:{event:"icon_changed"},zIndex:{event:"zindex_changed",cast:o.cast.integer},map:{readOnly:!0},"lat,lng":{name:"position",event:"position_changed",toGoogle:o._latLngToGoogle,fromGoogle:o._latLngFromGoogle}},_coreGoogleEvents:["click"],title:r("controller.title"),opacity:r("controller.opacity"),zIndex:r("controller.zIndex"),isVisible:r("controller.isVisible"),isDraggable:r("controller.isDraggable"),isClickable:r("controller.isClickable"),icon:r("controller.icon"),lat:r("controller.lat"),lng:r("controller.lng"),infoWindowTemplateName:i("controller.infoWindowTemplateName","parentView.markerInfoWindowTemplateName",function(){return this.get("controller.infoWindowTemplateName")||this.get("parentView.markerInfoWindowTemplateName")}).readOnly(),infoWindowAnchor:u("googleObject"),isInfoWindowVisible:r("controller.isInfoWindowVisible"),hasInfoWindow:i("parentView.markerHasInfoWindow","controller.hasInfoWindow",function(){var e=this.get("controller.hasInfoWindow");return null===e||void 0===e?!!this.get("parentView.markerHasInfoWindow"):e}).readOnly(),_handleCoreEvent:function(e){"click"===e&&this.set("isInfoWindowVisible",!0)}})}),define("dummy/views/google-map/polygon",["ember","ember-google-map/core/helpers","dummy/views/google-map/polyline","exports"],function(e,t,n,l){"use strict";var a=e["default"],o=t["default"],s=n["default"],i=a.computed,r=i.alias;l["default"]=s.extend({googleFQCN:"google.maps.Polygon",googleProperties:i(function(){return a.merge(this._super(),{fillColor:{optionOnly:!0},fillOpacity:{optionOnly:!0,cast:o.cast.number}})}).readOnly(),fillColor:r("controller.fillColor"),fillOpacity:r("controller.fillOpacity")})}),define("dummy/views/google-map/polyline",["ember","ember-google-map/core/helpers","dummy/views/google-map/core","exports"],function(e,t,n,l){"use strict";var a=e["default"],o=t["default"],s=n["default"],i=a.computed,r=i.alias,u=a.on;l["default"]=s.extend({googleFQCN:"google.maps.Polyline",templateName:"google-map/polyline",googleProperties:i(function(){return{isClickable:{name:"clickable",optionOnly:!0},isVisible:{name:"visible",event:"visible_changed"},isDraggable:{name:"draggable",event:"draggable_changed"},isEditable:{name:"editable",event:"editable_changed"},isGeodesic:{name:"geodesic",optionOnly:!0},icons:{optionOnly:!0},zIndex:{optionOnly:!0,cast:o.cast.integer},map:{readOnly:!0},strokeColor:{optionOnly:!0},strokeWeight:{optionOnly:!0,cast:o.cast.number},strokeOpacity:{optionOnly:!0,cast:o.cast.number}}}).readOnly(),strokeColor:r("controller.strokeColor"),strokeWeight:r("controller.strokeWeight"),strokeOpacity:r("controller.strokeOpacity"),zIndex:r("controller.zIndex"),isVisible:r("controller.isVisible"),isDraggable:r("controller.isDraggable"),isClickable:r("controller.isClickable"),isEditable:r("controller.isEditable"),icons:r("controller.icons"),initGoogleObject:u("didInsertElement",function(){o.hasGoogleLib()&&!this.get("googleObject")&&this.createGoogleObject({path:this.get("controller._path.googleArray")})})})}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",l=e["default"].$('meta[name="'+n+'"]').attr("content"),a=JSON.parse(unescape(l));return{"default":a}}catch(o){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests?require("dummy/tests/test-helper"):require("dummy/app")["default"].create({rootElement:"#application"});